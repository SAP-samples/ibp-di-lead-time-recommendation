{
	"properties": {},
	"description": "IBP LT Training",
	"processes": {
		"submitmetrics1": {
			"component": "com.sap.ml.submitMetrics",
			"metadata": {
				"label": "Submit Metrics",
				"x": 1148.999994277954,
				"y": 40,
				"height": 80,
				"width": 120,
				"extensible": false,
				"subengines": [
					"com.sap.python36"
				],
				"config": {}
			}
		},
		"artifactproducer1": {
			"component": "com.sap.ml.artifact.producer.v2",
			"metadata": {
				"label": "Create trainedModel File",
				"x": 1148.999994277954,
				"y": 375.9999990463257,
				"height": 80,
				"width": 120,
				"extensible": true,
				"subengines": [
					"main"
				],
				"config": {
					"artifactKind": "model",
					"artifactName": "trainedModel"
				}
			}
		},
		"artifactproducer2": {
			"component": "com.sap.ml.artifact.producer.v2",
			"metadata": {
				"label": "Create Planning Combinations File",
				"x": 1148.999994277954,
				"y": 200,
				"height": 80,
				"width": 120,
				"extensible": true,
				"subengines": [
					"main"
				],
				"config": {
					"artifactName": "${PlanningCombinationsFilename}"
				}
			}
		},
		"jupyter2": {
			"component": "com.sap.jupyter",
			"metadata": {
				"label": "AIModel",
				"x": 610.9999980926514,
				"y": 221.99999928474426,
				"height": 80,
				"width": 120,
				"extensible": true,
				"ui": "dynpath",
				"subengines": [
					"com.sap.python36"
				],
				"config": {
					"notebookFilePath": "AIModel",
					"productive": true
				},
				"additionalinports": [
					{
						"name": "in",
						"type": "string"
					}
				],
				"additionaloutports": [
					{
						"name": "out",
						"type": "string"
					},
					{
						"name": "modelOut",
						"type": "blob"
					},
					{
						"name": "testOut",
						"type": "blob"
					}
				]
			}
		},
		"jupyter1": {
			"component": "com.sap.jupyter",
			"metadata": {
				"label": "dataProcessor",
				"x": 401.99999809265137,
				"y": 221.99999928474426,
				"height": 80,
				"width": 120,
				"extensible": true,
				"ui": "dynpath",
				"subengines": [
					"com.sap.python36"
				],
				"config": {
					"notebookFilePath": "dataProcessor",
					"productive": true
				},
				"additionalinports": [
					{
						"name": "in",
						"type": "string"
					}
				],
				"additionaloutports": [
					{
						"name": "out",
						"type": "string"
					}
				]
			}
		},
		"python3operator1": {
			"component": "com.sap.system.python3Operator",
			"metadata": {
				"label": "LT Calc",
				"x": 196.99999904632568,
				"y": 213.99999928474426,
				"height": 80,
				"width": 120,
				"extensible": true,
				"filesRequired": [
					"script.py"
				],
				"generation": 1,
				"config": {
					"script": "def on_input(msgi,msgr):\n    from io import StringIO\n    import csv    \n    import pandas as pd\n    import json\n    \n#   issues\n    s_i = StringIO(msgi.body)\n    a_i = []\n    t_i = pd.DataFrame({})\n    for k,v in msgi.attributes.items():\n        if str(k) == 'metadata':\n            a_i = [f['Field']['ColumnName'] for f in v]\n            a_i = [a_i[i].upper()+str(i) if a_i[i]=='source' else a_i[i].upper() for i in range(len(a_i))]\n            t_i = pd.read_csv(s_i, index_col = False, names = a_i)            \n\n    if len(t_i)>0:\n        t_i = t_i.replace({'DOCID': {None:''},'LOCID': {None:''},'PRDID': {None:''},'BATCHID': {None:''}})\n        t_i['NUM'] = t_i.groupby(['DOCID','LOCID','PRDID','BATCHID','QTY'])['OTIME'].rank('dense')\n        \n #  receipts\n    s_r = StringIO(msgr.body)\n    a_r = []\n    t_r = pd.DataFrame({})\n    for k,v in msgr.attributes.items():\n        if str(k) == 'metadata':\n            a_r = [f['Field']['ColumnName'] for f in v]\n            a_r = [a_r[i].upper()+str(i) if a_r[i]=='source' else a_r[i].upper() for i in range(len(a_r))]\n            t_r = pd.read_csv(s_r, index_col = False, names = a_r)            \n\n    if len(t_r)>0:\n        t_r = t_r.replace({'DOCID': {None:''},'LOCID': {None:''},'PRDID': {None:''},'BATCHID': {None:''}})\n        t_r['NUM'] = t_r.groupby(['DOCID','LOCID','PRDID','BATCHID','QTY'])['OTIME'].rank('dense')\n    \n    if len(t_i)>0 and len(t_r)>0:\n        trans = pd.merge(t_i,t_r,on=['DOCID','LOCID','PRDID','BATCHID','QTY','NUM'],how='inner')\n        trans['lt'] = trans['OTIME_y']-trans['OTIME_x']\n        trans.rename(columns={'OTIME_x':'IOTIME','OTIME_y':'ROTIME','LOCID':'LOCTO','LOCFR':'LOCID'},inplace=True)\n        trans = trans[['LOCID','LOCTO','PRDID','IOTIME','ROTIME','LT','QTY']]\n        strans = str(trans.to_json())\n        api.send(\"out\", strans)\n    \napi.set_port_callback([\"ISSUES\",\"RECEIPTS\"], on_input)"
				},
				"additionalinports": [
					{
						"name": "ISSUES",
						"type": "message"
					},
					{
						"name": "RECEIPTS",
						"type": "message"
					}
				],
				"additionaloutports": [
					{
						"name": "out",
						"type": "string"
					}
				]
			}
		},
		"abapcdsreader1": {
			"component": "com.sap.abap.cds.reader",
			"metadata": {
				"label": "CDS Read Issues",
				"x": 12,
				"y": 153.99999928474426,
				"height": 80,
				"width": 120,
				"extensible": true,
				"generation": 1,
				"config": {
					"connectionID": "S4_QJ9",
					"operatorID": "com.sap.abap.cds.reader.v2",
					"subscriptionType": "New",
					"action": "Initial Load",
					"wireformat": "Enhanced Format Conversions",
					"cdsname": "Z_ISSUES",
					"subscriptionName": "ISSUES001",
					"chunkSize": 1000
				},
				"additionaloutports": [
					{
						"name": "outMessageData",
						"type": "message"
					}
				]
			}
		},
		"python3operator2": {
			"component": "com.sap.system.python3Operator",
			"metadata": {
				"label": "Write ML Metrics",
				"x": 1457.9999923706055,
				"y": 139.99999952316284,
				"height": 80,
				"width": 120,
				"extensible": true,
				"config": {
					"script": "def on_inputs_ready(metrics_resp, artifact_id, test_in):\n    # both input ports have data - previous operators have completed. Send a message as output to stop the graph\n    api.send(\"output\", \"done\")\n\napi.set_port_callback([\"metricsResponse\", \"artifactId\", \"testIn\"], on_inputs_ready)"
				},
				"additionalinports": [
					{
						"name": "metricsResponse",
						"type": "message"
					},
					{
						"name": "artifactId",
						"type": "message"
					},
					{
						"name": "testIn",
						"type": "message"
					}
				],
				"additionaloutports": [
					{
						"name": "output",
						"type": "string"
					}
				]
			}
		},
		"abapcdsreader2": {
			"component": "com.sap.abap.cds.reader",
			"metadata": {
				"label": "CDS Read Receipts",
				"x": 12,
				"y": 273.99999928474426,
				"height": 80,
				"width": 120,
				"extensible": true,
				"generation": 1,
				"config": {
					"connectionID": "S4_QJ9",
					"operatorID": "com.sap.abap.cds.reader.v2",
					"subscriptionType": "New",
					"action": "Initial Load",
					"wireformat": "Enhanced Format Conversions",
					"chunkSize": 1000,
					"subscriptionName": "RECEIPTS001",
					"cdsname": "Z_RECEIPTS"
				},
				"additionaloutports": [
					{
						"name": "outMessageData",
						"type": "message"
					}
				]
			}
		},
		"tomessageconverter1": {
			"component": "com.sap.util.toMessageConverter",
			"metadata": {
				"label": "ToMessage Converter",
				"x": 922.4999961853027,
				"y": 70.99999976158142,
				"height": 50,
				"width": 50,
				"config": {}
			}
		},
		"graphterminator1": {
			"component": "com.sap.util.graphTerminator",
			"metadata": {
				"label": "Graph Terminator",
				"x": 1642.9999914169312,
				"y": 213.99999928474426,
				"height": 80,
				"width": 120,
				"config": {}
			}
		},
		"writefile1": {
			"component": "com.sap.file.write",
			"metadata": {
				"label": "Write trainedModel File",
				"x": 1457.9999923706055,
				"y": 259.99999952316284,
				"height": 80,
				"width": 120,
				"config": {}
			}
		},
		"writefile2": {
			"component": "com.sap.file.write",
			"metadata": {
				"label": "Write Planning Combinations File",
				"x": 887.9999961853027,
				"y": 250.99999976158142,
				"height": 80,
				"width": 120,
				"config": {}
			}
		},
		"tomessageconverter2": {
			"component": "com.sap.util.toMessageConverter",
			"metadata": {
				"label": "ToMessage Converter",
				"x": 922.4999961853027,
				"y": 386.9999988079071,
				"height": 50,
				"width": 50,
				"config": {}
			}
		},
		"tomessageconverter3": {
			"component": "com.sap.util.toMessageConverter",
			"metadata": {
				"label": "ToMessage Converter",
				"x": 922.4999961853027,
				"y": 160.99999976158142,
				"height": 50,
				"width": 50,
				"config": {}
			}
		}
	},
	"groups": [
		{
			"name": "group3",
			"nodes": [
				"submitmetrics1"
			],
			"metadata": {
				"description": "Group"
			}
		},
		{
			"name": "group1",
			"nodes": [
				"artifactproducer1"
			],
			"metadata": {
				"description": "Group"
			}
		},
		{
			"name": "group2",
			"nodes": [
				"artifactproducer2"
			],
			"metadata": {
				"description": "Group"
			}
		},
		{
			"name": "group4",
			"nodes": [
				"jupyter2"
			],
			"metadata": {
				"description": "Group"
			},
			"tags": {
				"catboost": "",
				"sklearn": "",
				"mathplotlib": "3.2",
				"seaborn": ""
			}
		},
		{
			"name": "group5",
			"nodes": [
				"jupyter1"
			],
			"metadata": {
				"description": "Group"
			},
			"tags": {
				"seaborn": ""
			}
		}
	],
	"connections": [
		{
			"metadata": {
				"points": "136,193.99999928474426 163.99999952316284,193.99999928474426 163.99999952316284,244.99999928474426 191.99999904632568,244.99999928474426"
			},
			"src": {
				"port": "outMessageData",
				"process": "abapcdsreader1"
			},
			"tgt": {
				"port": "ISSUES",
				"process": "python3operator1"
			}
		},
		{
			"metadata": {
				"points": "136,313.99999928474426 163.99999952316284,313.99999928474426 163.99999952316284,262.99999928474426 191.99999904632568,262.99999928474426"
			},
			"src": {
				"port": "outMessageData",
				"process": "abapcdsreader2"
			},
			"tgt": {
				"port": "RECEIPTS",
				"process": "python3operator1"
			}
		},
		{
			"metadata": {
				"points": "734.9999980926514,243.99999928474426 762.9999976158142,243.99999928474426 762.9999976158142,250.99999928474426 838.9999966621399,250.99999928474426 838.9999966621399,86.99999976158142 917.4999961853027,86.99999976158142"
			},
			"src": {
				"port": "out",
				"process": "jupyter2"
			},
			"tgt": {
				"port": "inbody",
				"process": "tomessageconverter1"
			}
		},
		{
			"metadata": {
				"points": "976.4999961853027,95.99999976158142 1039.9999957084656,95.99999976158142 1039.9999957084656,80 1143.999994277954,80"
			},
			"src": {
				"port": "out",
				"process": "tomessageconverter1"
			},
			"tgt": {
				"port": "metrics",
				"process": "submitmetrics1"
			}
		},
		{
			"metadata": {
				"points": "1581.9999923706055,179.99999952316284 1609.9999918937683,179.99999952316284 1609.9999918937683,253.99999928474426 1637.9999914169312,253.99999928474426"
			},
			"src": {
				"port": "output",
				"process": "python3operator2"
			},
			"tgt": {
				"port": "stop",
				"process": "graphterminator1"
			}
		},
		{
			"metadata": {
				"points": "1272.999994277954,80 1376.9999928474426,80 1376.9999928474426,161.99999952316284 1452.9999923706055,161.99999952316284"
			},
			"src": {
				"port": "response",
				"process": "submitmetrics1"
			},
			"tgt": {
				"port": "metricsResponse",
				"process": "python3operator2"
			}
		},
		{
			"metadata": {
				"points": "1272.999994277954,433.9999990463257 1300.999993801117,433.9999990463257 1300.999993801117,421.4999990463257 1408.9999928474426,421.4999990463257 1408.9999928474426,299.99999952316284 1452.9999923706055,299.99999952316284"
			},
			"src": {
				"port": "outFileSend",
				"process": "artifactproducer1"
			},
			"tgt": {
				"port": "file",
				"process": "writefile1"
			}
		},
		{
			"metadata": {
				"points": "1581.9999923706055,290.99999952316284 1609.9999918937683,290.99999952316284 1609.9999918937683,367.9999990463257 1424.9999928474426,367.9999990463257 1424.9999928474426,495.9999985694885 1039.9999957084656,495.9999985694885 1039.9999957084656,421.4999990463257 1115.9999947547913,421.4999990463257 1115.9999947547913,424.9999990463257 1143.999994277954,424.9999990463257"
			},
			"src": {
				"port": "file",
				"process": "writefile1"
			},
			"tgt": {
				"port": "inFileReturn",
				"process": "artifactproducer1"
			}
		},
		{
			"metadata": {
				"points": "1272.999994277954,397.9999990463257 1300.999993801117,397.9999990463257 1300.999993801117,410.4999990463257 1392.9999928474426,410.4999990463257 1392.9999928474426,179.99999952316284 1452.9999923706055,179.99999952316284"
			},
			"src": {
				"port": "outArtifact",
				"process": "artifactproducer1"
			},
			"tgt": {
				"port": "artifactId",
				"process": "python3operator2"
			}
		},
		{
			"metadata": {
				"points": "525.9999980926514,261.99999928474426 605.9999980926514,261.99999928474426"
			},
			"src": {
				"port": "out",
				"process": "jupyter1"
			},
			"tgt": {
				"port": "in",
				"process": "jupyter2"
			}
		},
		{
			"metadata": {
				"points": "1272.999994277954,258 1300.999993801117,258 1300.999993801117,245.5 1376.9999928474426,245.5 1376.9999928474426,319.99999952316284 1039.9999957084656,319.99999952316284 1039.9999957084656,358.99999928474426 854.9999966621399,358.99999928474426 854.9999966621399,290.9999997615814 882.9999961853027,290.9999997615814"
			},
			"src": {
				"port": "outFileSend",
				"process": "artifactproducer2"
			},
			"tgt": {
				"port": "file",
				"process": "writefile2"
			}
		},
		{
			"metadata": {
				"points": "1011.9999961853027,281.9999997615814 1039.9999957084656,281.9999997615814 1039.9999957084656,245.5 1115.9999947547913,245.5 1115.9999947547913,249 1143.999994277954,249"
			},
			"src": {
				"port": "file",
				"process": "writefile2"
			},
			"tgt": {
				"port": "inFileReturn",
				"process": "artifactproducer2"
			}
		},
		{
			"metadata": {
				"points": "1272.999994277954,222 1300.999993801117,222 1300.999993801117,234.5 1408.9999928474426,234.5 1408.9999928474426,197.99999952316284 1452.9999923706055,197.99999952316284"
			},
			"src": {
				"port": "outArtifact",
				"process": "artifactproducer2"
			},
			"tgt": {
				"port": "testIn",
				"process": "python3operator2"
			}
		},
		{
			"metadata": {
				"points": "976.4999961853027,411.9999988079071 1039.9999957084656,411.9999988079071 1039.9999957084656,410.4999990463257 1115.9999947547913,410.4999990463257 1115.9999947547913,406.9999990463257 1143.999994277954,406.9999990463257"
			},
			"src": {
				"port": "out",
				"process": "tomessageconverter2"
			},
			"tgt": {
				"port": "inArtifact",
				"process": "artifactproducer1"
			}
		},
		{
			"metadata": {
				"points": "734.9999980926514,261.99999928474426 838.9999966621399,261.99999928474426 838.9999966621399,402.9999988079071 917.4999961853027,402.9999988079071"
			},
			"src": {
				"port": "modelOut",
				"process": "jupyter2"
			},
			"tgt": {
				"port": "inbody",
				"process": "tomessageconverter2"
			}
		},
		{
			"metadata": {
				"points": "976.4999961853027,185.99999976158142 1039.9999957084656,185.99999976158142 1039.9999957084656,234.5 1115.9999947547913,234.5 1115.9999947547913,231 1143.999994277954,231"
			},
			"src": {
				"port": "out",
				"process": "tomessageconverter3"
			},
			"tgt": {
				"port": "inArtifact",
				"process": "artifactproducer2"
			}
		},
		{
			"metadata": {
				"points": "734.9999980926514,279.99999928474426 762.9999976158142,279.99999928474426 762.9999976158142,272.99999928474426 854.9999966621399,272.99999928474426 854.9999966621399,176.99999976158142 917.4999961853027,176.99999976158142"
			},
			"src": {
				"port": "testOut",
				"process": "jupyter2"
			},
			"tgt": {
				"port": "inbody",
				"process": "tomessageconverter3"
			}
		},
		{
			"metadata": {
				"points": "320.9999990463257,253.99999928474426 348.9999985694885,253.99999928474426 348.9999985694885,261.99999928474426 396.99999809265137,261.99999928474426"
			},
			"src": {
				"port": "out",
				"process": "python3operator1"
			},
			"tgt": {
				"port": "in",
				"process": "jupyter1"
			}
		}
	],
	"inports": {},
	"outports": {},
	"metadata": {}
}
